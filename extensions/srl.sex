program SRLUpdater;

{$I ./Updater.sei}

{$IFNDEF SIMBAMAJOR1100}
  {$I ./PlayerManager.sei}
{$ENDIF}

function CheckSRL(Name: string; I: integer): boolean;
var
  X: integer;
begin
  Result := True;

  for X := 0 to Length(UpdaterArr) do
    if (UpdaterArr[X].Name = 'Plugins') then
    begin
      if (Name = 'Check') then
        Tick(UpdaterArr[X].CheckMenuItem)
      else
        Tick(UpdaterArr[X].Timer);

      Exit;
    end;
end;

function BeforeUpdate(NotNeeded: string; I: integer): boolean;
begin
  Result := ForceDirectories(UpdaterArr[I].Folder + UpdaterArr[I].Name);
end;

function BeforeUpdateEx(NotNeeded: string; I: integer): boolean;
begin
  Result := ForceDirectories(UpdaterArr[I].Folder);
end;

(*
** Adds a file extension 'bak' to all the files in path, used to we can add files that are currently loaded.
*)
procedure BackupFiles(path: string; files: TStringArray);
var
  i, h: integer;
begin
  h := high(files);

  if (h < 0) then
    exit;

  for i := 0 to h do
  begin
    if (fileExists(path + files[i] + '.bak')) then // previous backups?
      deleteFile(path + files[i] + '.bak');

    if (fileExists(path + files[i])) then
      if (renameFile(path + files[i], path + files[i] + '.bak')) then
        writeln('Plugins Updater: Renamed '+ path + files[i] +' to ' + path + files[i] + '.bak')
      else
        writeln('Plugins Updater: Failed to rename file ' + path + files[i]);
  end;
end;

(*
** Adds a file extension 'bak' to all the directorys in path, used to we can add files that are currently loaded.
*)
{$IFDEF SIMBAMAJOR1100}
procedure BackupDirectorys(path: string; files: TStringArray);
var
  i, h: integer;
begin
  h := high(files);

  if (h < 0) then
    exit;

  for i := 0 to h do
  begin
    if (directoryExists(path + files[i] + '.bak')) then // previous backups?
      deleteDirectory(path + files[i] + '.bak/', true);

    if (directoryExists(path + files[i])) then
      if (renameFile(path + files[i], path + files[i] + '.bak')) then
        writeln('Plugins Updater: Renamed '+ path + files[i] +' to ' + path + files[i] + '.bak')
      else
        writeln('Plugins Updater: Failed to rename directory ' + path + files[i]);
  end;
end;
{$ENDIF}

(*
** Moves files 'srcFiles' from 'srcPath' into 'targPath'.
*)
procedure MoveFiles(srcPath: string; srcFiles: TStringArray; targPath: string);
var
  i, h: integer;
begin
  h := high(srcfiles);

  if (h < 0) then
    exit;

  for i := 0 to h do
    if (RenameFile(srcPath + srcFiles[i], targPath + srcFiles[i])) then
      writeln('Plugins Updater: Moved file '+srcFiles[i]+' into '+targPath)
    else
      writeln('Plugins Updater: Failed to move file '+srcPath+srcFiles[i]);
end;

{$IFNDEF SIMBAMAJOR1100}
function SuccessPlugins_Old(Cont: string; I: integer): boolean;
var
  X: integer;
  Files: TStringArray;
  Overwrite: boolean;
begin
  Files := GetFiles(UpdaterArr[I].Folder, {$IFDEF WIN32}'dll'{$ELSE}'so'{$ENDIF});
  Overwrite := True;

  for X := 0 to High(Files) do
    if (FileExists(PluginPath + Files[X])) then
    begin
      Overwrite := (MessageDlg('SRL Updater', 'Do you want to overwrite the plugins?', mtConfirmation, [mbNo, mbYes], 0) = mrYes);
      Break;
    end;

  if overwrite then
  begin
    for x := 0 to high(files) do
      if FileExists(PluginPath + Files[X]) then
      begin
        if FileExists(PluginPath + Files[X] + '.bak') then
          DeleteFile(PluginPath + Files[X] + '.bak');

        if RenameFile(PluginPath + Files[X], PluginPath + Files[X] + '.bak') then
          writeln('Renamed ' + PluginPath + Files[X] + ' to ' + PluginPath + Files[X] + '.bak')
        else
          writeln('Plugins Updater: failed to rename ' + PluginPath + Files[X] + ' to ' +
              PluginPath + Files[X] + '.bak');
      end;
  end;

  Result := UnTarEx(Cont, PluginPath, Overwrite);
  if not Result then
    writeln('Failed to update plugins! Restart Simba and update before starting a script.');
end;
{$ENDIF}

function SuccessDownload(Cont: string; I: integer): boolean; // called if files are succesfully dl'd
var
  ExtensionPath, SavePath: string;
  PluginFiles, ExtensionFiles, Folders: TStringArray;
begin
  {$IFDEF SIMBAMAJOR1100}
  SavePath := PluginPath + '.temp/'; // paths to save the tar.bz2 into
  ExtensionPath := AppPath + 'Extensions/';  //dunno why Simba doesn't have this

  WriteLn('Plugins Updater: Success Download entered');

  try
    // gather files
    PluginFiles := GetFiles(SavePath + 'plugins/', '*');
    ExtensionFiles := GetFiles(SavePath + 'extensions/', '*');
    Folders := GetDirectories(SavePath + 'folders/');

    // backup previous files (so we can keep the current running and update)
    BackupFiles(PluginPath, PluginFiles);
    BackupFiles(ExtensionPath, ExtensionFiles);
    BackupDirectorys(AppPath, Folders);

    // finally move our files into the target directories
    MoveFiles(SavePath + 'plugins/', PluginFiles, PluginPath);
    MoveFiles(SavePath + 'extensions/', ExtensionFiles, ExtensionPath);
    MoveFiles(SavePath + 'folders/', Folders, AppPath);

    Result := true;
    Writeln('Succefully updated plugins, re-load Simba to load new ones');
  except
    Result := false;
    Writeln('Failed to update plugins, exception raised');
  finally
    DeleteDirectory(SavePath, true);
  end;
{$ELSE}
  SuccessPlugins_Old(Cont, I);
{$ENDIF}
end;

procedure ClickRafiki(Sender: TObject);
var
  RafikiPath: string;
begin
{$IFDEF SIMBAMAJOR1100}
  RafikiPath := IncludePath + 'srl-6/lib/misc/playermanager.simba';

  if (FileExists(RafikiPath)) then
    OpenScriptEx(RafikiPath, True)
  else
    writeln('SRL: Failed to find Rafiki player manager, Make sure you''ve installed SRL-6!');
{$ELSE}
  RunRafikiPlayerManager();
{$ENDIF}
end;

procedure ClickBugs(Sender: TObject);
begin
  OpenWebPage('http://villavu.com/forum/project.php?projectid=10');
end;

procedure ClickHelp(Sender: TObject);
begin
  OpenWebPage('http://villavu.com/forum/forumdisplay.php?f=486');
end;

procedure Init;
var
  SRL, SPS, Plugins, i: integer;
  MenuItems: array of TMenuItem;
  Names: array of string;
begin
  if (AddUpdater('SRL', 'http://wizzup.org/static/srl/srl-6.tar.bz2', 'http://wizzup.org/static/srl/srl-6_version', IncludePath, True, False, SRL)) then
  begin
    UpdaterArr[SRL].Hooks[CHECK_FOR_UPDATE] := @CheckSRL;
    UpdaterArr[SRL].Hooks[BEFORE_UPDATE] := @BeforeUpdate;

    Names := ['Player Manager', 'Bugs and Suggestions', 'Help'];
    SetLength(MenuItems, Length(Names));

    for I := 0 to High(MenuItems) do
    begin
      MenuItems[I] := TMenuItem.Create(UpdaterArr[SRL].MainMenu);
      MenuItems[I].Caption := Names[I];
      UpdaterArr[SRL].MainMenu.Insert(I, MenuItems[I]);
    end;

    MenuItems[0].OnClick := @ClickRafiki;
    MenuItems[1].OnClick := @ClickBugs;
    MenuItems[2].OnClick := @ClickHelp;
  end;

  if (AddUpdater('SPS', 'http://wizzup.org/static/srl/sps.tar.bz2', 'http://wizzup.org/static/srl/sps_version', IncludePath, True, False, SPS)) then
  begin
    UpdaterArr[SPS].Hooks[BEFORE_UPDATE] := @BeforeUpdate;
  end;

  Settings.SetKeyValue('Plugins_Visible', 'True');
  {$IFNDEF SIMBAMAJOR1100}
  if (AddUpdater('Plugins', 'http://wizzup.org/static/srl/simba_plugins.tar.bz2', 'http://wizzup.org/static/srl/plugins_version', PluginPath + '.temp\', True, True, Plugins)) then
  {$ELSE}
  if (AddUpdater('Plugins', 'http://wizzup.org/static/srl/simba_plugins_new.tar.bz2', 'http://wizzup.org/static/srl/plugins_new_version', PluginPath + '.temp\', True, True, Plugins)) then
  {$ENDIF}
  begin
    UpdaterArr[Plugins].MainMenu.Visible := true;
    UpdaterArr[Plugins].Hooks[BEFORE_UPDATE] := @BeforeUpdateEx;
    UpdaterArr[Plugins].Hooks[SUCCESS_UPDATE] := @SuccessDownload;
  end;
end;

function GetName: string;
begin
  Result := 'SRL/SPS/Plugins Updater';
end;

function GetVersion: string;
begin
  Result := '1.0';
end;

begin
end.
